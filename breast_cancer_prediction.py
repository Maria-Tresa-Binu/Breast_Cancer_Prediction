# -*- coding: utf-8 -*-
"""Breast Cancer Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UAVW_OHWMjPIMSgxVV5sVBXnDLJ_I2Qv
"""

import numpy as np
import pandas as pd
import sklearn.datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

b_dataset=sklearn.datasets.load_breast_cancer()

print(b_dataset)

data_frame=pd.DataFrame(b_dataset.data,columns=b_dataset.feature_names)

#print the first 5 rows of dataframe
data_frame.head()

data_frame['label']=b_dataset.target

data_frame.tail()

data_frame.info()

#checking the distribution of target variable
data_frame['label'].value_counts()

data_frame.groupby('label').mean()

"""Seperating features and targets"""

x=data_frame.drop(columns='label',axis=1)
y=data_frame['label']

"""Splitting data into training data and testing data"""

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)

model=LogisticRegression()

model.fit(x_train,y_train)

"""Model Evaluation"""

x_train_prediction = model.predict(x_train)
training_data_accuracy=accuracy_score(y_train,x_train_prediction)

print(training_data_accuracy)

x_test_prediction = model.predict(x_test)
testing_data_accuracy=accuracy_score(y_test,x_test_prediction)

print(testing_data_accuracy)

"""Building a predictive system"""

input_data=(13.54,14.36,87.46,566.3,0.09779,0.08129,0.06664,0.04781,0.1885,0.05766,0.2699,0.7886,2.058,23.56,0.008462,0.0146,0.02387,0.01315,0.0198,0.0023,15.11,19.26,99.7,711.2,0.144,0.1773,0.239,0.1288,0.2977,0.07259)
arr=np.asarray(input_data)
reshaped=arr.reshape(1,-1)
prediction=model.predict(reshaped)
print(prediction)
#reshape the data array